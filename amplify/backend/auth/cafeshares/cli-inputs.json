{
  "version": "1",
  "cognitoConfig": {
    "identityPoolName": "cafeshares_identity_pool",
    "allowUnauthenticatedIdentities": true,
    "resourceNameTruncated": "cafesh0fc6df67",
    "userPoolName": "cafeshares_user_pool",
    "autoVerifiedAttributes": ["email"],
    "mfaConfiguration": "OPTIONAL",
    "mfaTypes": ["SMS Text Message", "TOTP"],
    "smsAuthenticationMessage": "Your authentication code is {####}",
    "smsVerificationMessage": "Your verification code is {####}",
    "emailVerificationSubject": "確認コード | CafeShares",
    "emailVerificationMessage": "確認コード：{####}",
    "defaultPasswordPolicy": true,
    "passwordPolicyMinLength": "12",
    "passwordPolicyCharacters": ["Requires Lowercase", "Requires Uppercase", "Requires Numbers"],
    "requiredAttributes": ["email"],
    "aliasAttributes": [],
    "userpoolClientGenerateSecret": false,
    "userpoolClientRefreshTokenValidity": 30,
    "userpoolClientWriteAttributes": [
      "address",
      "birthdate",
      "gender",
      "locale",
      "nickname",
      "phone_number",
      "preferred_username",
      "picture",
      "profile",
      "website",
      "email"
    ],
    "userpoolClientReadAttributes": [
      "address",
      "birthdate",
      "email",
      "gender",
      "locale",
      "nickname",
      "phone_number",
      "preferred_username",
      "picture",
      "profile",
      "website"
    ],
    "userpoolClientLambdaRole": "cafesh0fc6df67_userpoolclient_lambda_role",
    "userpoolClientSetAttributes": true,
    "authSelections": "identityPoolAndUserPool",
    "resourceName": "cafeshares",
    "serviceName": "Cognito",
    "useDefault": "manual",
    "sharedId": "0fc6df67",
    "userPoolGroupList": [],
    "userPoolGroups": false,
    "usernameCaseSensitive": false,
    "adminQueries": false,
    "adminQueryGroup": "cafeshares",
    "hostedUI": false,
    "thirdPartyAuth": false,
    "authProviders": [],
    "triggers": {},
    "authRoleArn": {
      "Fn::GetAtt": ["AuthRole", "Arn"]
    },
    "unauthRoleArn": {
      "Fn::GetAtt": ["UnauthRole", "Arn"]
    },
    "breakCircularDependency": true,
    "useEnabledMfas": false,
    "dependsOn": [],
    "parentStack": {
      "Ref": "AWS::StackId"
    },
    "permissions": []
  }
}
