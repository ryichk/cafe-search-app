type Post
  @model(
    mutations: {
      create: "createPost",
      delete: "deletePost",
      update: "updatePost"
    }
  )
  @auth(rules: [
    { allow: owner, provider: userPools },
    { allow: public, operations: [read] }
  ])
{
  id: ID!
  cafeId: String!
  content: String
  picture: String!
  tags: [Tag] @manyToMany(relationName: "PostTags")
  comments: [Comment] @hasMany(indexName: "byPost", fields: ["id"])
}

type Tag
  @model(
    mutations: {
      create: "createTag",
      delete: null,
      update: null
    }
  )
  @auth (rules: [
    { allow: owner, provider: userPools, operations: [read, create] },
    { allow: public, operations: [read] }
  ])
{
  id: ID!
  label: String!
  posts: [Post] @manyToMany(relationName: "PostTags")
}

type Comment
  @model(
    mutations: {
      create: "createComment",
      delete: "deleteComment",
      update: "updateComment"
    }
  )
  @auth (rules: [
    { allow: owner, provider: userPools },
    { allow: public, operations: [read] }
  ])
{
  id: ID!
  postID: ID! @index(name: "byPost", sortKeyFields: ["content"])
  post: Post @belongsTo(fields: ["postID"])
  content: String!
}

type FollowRelationship
  @model(
    mutations: {
      create: "createFollowRelationship",
      delete: "deleteFollowRelationship",
      update: null
    }
  )
  @auth(rules: [
    { allow: owner, provider: userPools, operations: [read, create, delete] },
    { allow: private, provider: userPools, operations: [read] }
  ])
{
  followeeId: ID!
  followerId: ID!
}
